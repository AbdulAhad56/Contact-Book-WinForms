User Table:
CREATE TABLE  "USERS" 
   (	"ID" NUMBER, 
	"FIRSTNAME" VARCHAR2(50) NOT NULL ENABLE, 
	"LASTNAME" VARCHAR2(50) NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(50) NOT NULL ENABLE, 
	"USER_PASSWORD" VARCHAR2(100) NOT NULL ENABLE, 
	"PICTURE" BLOB, 
	 PRIMARY KEY ("ID") ENABLE, 
	 UNIQUE ("USERNAME") ENABLE
   )
/

CREATE OR REPLACE TRIGGER  "USERS_TRIGGER" 
BEFORE INSERT ON USERS
FOR EACH ROW
 WHEN (NEW.ID IS NULL) BEGIN
    SELECT USERS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER  "USERS_TRIGGER" ENABLE
/


Contacts Table:
CREATE TABLE  "CONTACTS" 
   (	"CONTACT_ID" NUMBER, 
	"FIRSTNAME" VARCHAR2(100) NOT NULL ENABLE, 
	"LASTNAME" VARCHAR2(100) NOT NULL ENABLE, 
	"PHONE" VARCHAR2(15), 
	"EMAIL" VARCHAR2(100), 
	"GROUP_ID" NUMBER, 
	"ADDRESS" VARCHAR2(255), 
	 CONSTRAINT "CONTACTS_PK" PRIMARY KEY ("CONTACT_ID") ENABLE, 
	 CONSTRAINT "CONTACTS_FK_GROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES  "GROUPS" ("GROUP_ID") ON DELETE CASCADE ENABLE
   )
/

CREATE OR REPLACE TRIGGER  "CONTACTS_TRIGGER" 
BEFORE INSERT ON contacts
FOR EACH ROW
     WHEN (NEW.contact_id IS NULL) BEGIN
        SELECT contacts_seq.NEXTVAL INTO :NEW.contact_id FROM DUAL;
    END;
/
ALTER TRIGGER  "CONTACTS_TRIGGER" ENABLE
/

Groups Table:
CREATE TABLE  "GROUPS" 
   (	"GROUP_ID" NUMBER, 
	"GROUP_NAME" VARCHAR2(100) NOT NULL ENABLE, 
	 PRIMARY KEY ("GROUP_ID") ENABLE
   )
/

CREATE OR REPLACE TRIGGER  "GROUPS_TRIGGER" 
BEFORE INSERT ON groups
FOR EACH ROW
 WHEN (NEW.group_id IS NULL) BEGIN
    SELECT groups_seq.NEXTVAL INTO :NEW.group_id FROM DUAL;
END;
/
ALTER TRIGGER  "GROUPS_TRIGGER" ENABLE
/
